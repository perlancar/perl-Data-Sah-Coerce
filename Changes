Revision history for Data-Sah-Coerce

0.009   2016-05-22 (PERLANCAR)

	- [Incompatible change] Replace return_type=bool+val with str+val.


0.008   2016-05-21 (PERLANCAR)

	- No functional changes.

	- [test] Skip js tests when node.js is not available [CT].


0.007   2016-05-20 (PERLANCAR)

        - Add option: return_type. The default is 'val' which is the same as
          before, but another return type 'bool+val' makes the coercer return a
          2-element array instead: the first element is a bool value indicating
          whether value has been coerced, and the second is the (possibly)
          coerced value. This is useful e.g. for testing/debugging.


0.006   2016-05-19 (PERLANCAR)

        [INCOMPATIBLE CHANGES]

        - Rename js rules: date::int_epoch -> date::float_epoch. Rename perl
          rules: date::int_epoch -> date::float_epoch. This means when
          upgrading, you must first uninstall the old version to remove the old
          module names. Sorry for this.

        [ENHANCEMENTS]

        - Introduce ordering ('prio' key in rule metadata). prio is a number
          between 0-100 and the lower the number, the higher the priority is.
          Rules will be sorted using their priority.

        - Add coercion rules for type 'bool'.

        [TESTS]

        - Complete the rest of the test suite (js compiler, duration and bool
          types).


0.005   2016-05-18 (PERLANCAR)

	- No functional changes.

	- Add test suite (so far only for compiler=perl, type=date).


0.004   2016-05-18 (PERLANCAR)

	- js: Add coercion rule for duration from float/float-string.


0.003   2016-05-17 (PERLANCAR)

        - Add coercion rules for type 'duration'.


0.002   2016-05-17 (PERLANCAR)

        - Add js rules for type 'date'.

        - Introduce rule metadata 'might_die'.

        - Add module: Data::Sah::CoerceJS.

        - perl: Tweak error messages to make it more helpfule.

        - Documentationf fixes and addition.


0.001   2016-05-16 (PERLANCAR)

        - First release, incomplete (no JS implementation & test suite yet).
